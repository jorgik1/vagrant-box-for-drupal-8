# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "scotch/box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  #config.vm.network "forwarded_port", guest: 80, host: 8080
  #config.vm.network "forwarded_port", guest: 1080, host: 1080	
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../", "/var/www/public", type: "nfs"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
	if [ -d "/var/www/public/vagrant" ]; then
		sudo chown -R vagrant:vagrant /var/www/public
		sudo rm /etc/apache2/sites-enabled/000-default.conf
		sudo cp /var/www/public/vagrant/virtual.host.conf /etc/apache2/sites-enabled/000-default.conf
		mkdir -p /var/www/public/web
		php -r "readfile('https://s3.amazonaws.com/files.drush.org/drush.phar');" > drush
  		chmod +x drush
		sudo mv drush /usr/local/bin
		mysql -uroot -proot -Bse "create database site;"
		sudo add-apt-repository ppa:ondrej/php -y
		sudo apt-get update
        sudo apt-get install php5.6 php5.6-mbstring php5.6-mcrypt php5.6-mysql php5.6-xml php5.6-gd -y
        sudo a2dismod php5
        sudo a2enmod php5.6
        sudo service apache2 restart
		sudo apt-get install php5.6-xdebug -y
		sudo rm /etc/php/5.6/apache2/conf.d/20-xdebug.ini
		sudo cp /var/www/public/vagrant/xdebug.conf /etc/php/5.6/apache2/conf.d/20-xdebug.ini
		sudo composer self-update 1.2.0
		sudo service apache2 restart
		sudo pear channel-discover pear.phing.info
		sudo pear install [--alldeps] phing/phing
		cat /var/www/public/vagrant/bash.conf >> /home/vagrant/.bashrc
	fi	
  SHELL
end
